plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "4.2.1.3168"
    id 'jacoco'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

sonar {
    properties {
        property("sonar.projectKey", "PetShop")
        property("sonar.projectName", "PetShop")

        property("sonar.host.url", "http://localhost:9000")
        property("sonar.token", "squ_f70f4c9b928fcc66bd1740bc11269f41df048531")

        property("sonar.sources", sourceSets.main.java.srcDirs.join(","))
        property("sonar.tests", sourceSets.test.java.srcDirs.join(","))

        property("sonar.java.binaries", sourceSets.main.output.classesDirs.getAsPath())
        property("sonar.java.test.binaries", sourceSets.test.output.classesDirs.getAsPath())

        property("sonar.sourceEncoding", "UTF-8")
    }
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

group = 'br.com.petshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}